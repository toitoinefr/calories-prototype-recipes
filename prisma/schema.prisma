// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id              Int               @id @default(autoincrement())
  name            String
  //imageUrl      String relation AWS S3
  ProductInRecipe ProductInRecipe[]
  category        ProductCategory?  @relation(fields: [categoryId], references: [id])
  categoryId      Int?
  calories        Int
  fat             Int?
  fatSaturated    Int?
  carbohydrates   Int?
  sugar           Int?
  fibres          Int?
  salt            Int?
}

model RecipeStatus {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  recipes Recipe[]
}

model ProductCategory {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]
}

model Recipe {
  id            Int               @id @default(autoincrement())
  name          String
  description   String            @db.VarChar(255)
  //author      User @relation(User)
  steps         Step[]
  //imageUrl    String relation AWS S3
  duration      Int?
  difficulty    Int?
  totalCalories Int?
  totalProteins Int?
  status        RecipeStatus      @relation(fields: [statusId], references: [id])
  statusId      Int
  products      ProductInRecipe[]
  tags          String[]
  category      RecipeCategory?   @relation(fields: [categoryId], references: [id])
  categoryId    Int?
  slug          String?
  link          String?
}

model Step {
  id       Int    @id @default(autoincrement())
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId Int
  order    Int    // L'ordre de cette étape dans la recette
  content  String // Le contenu de l'étape de la recette
}

model RecipeCategory {
  id      Int      @id @default(autoincrement())
  name    String
  recipes Recipe[]
}

model ProductInRecipe {
  id        Int     @id @default(autoincrement())
  recipe    Recipe  @relation(fields: [recipeId], references: [id])
  recipeId  Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
}
